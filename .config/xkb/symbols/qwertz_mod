default
xkb_symbols "basic" {
    name[1] = "qwertzmod";

    key.type = "ONE_LEVEL";

    key <ESC>  { [ Escape           ] };
    key <RTRN> { [ Return           ] };
    key <PRSC> { [ Print            ] };
    key <PAUS> { [ Pause            ] };
    key <DELE> { [ Delete           ] };
    key <TLDE> { [ degree           ] };
    key <BKSL> { [ backslash        ] };
    key <TAB>  { [ Tab              ] };
    key <CAPS> { [ Escape           ] };
    key <LFSH> { [ Shift_L          ] };
    key <LSGT> { [ ISO_Level3_Shift ] };
    key <RALT> { [ ISO_Level3_Shift ] };
    key <RTSH> { [ Shift_R          ] };
    key <LCTL> { [ Control_L        ] };
    key <LALT> { [ Alt_L            ] };
    key <RCTL> { [ Control_R        ] };
    key <PGUP> { [ Prior            ] };
    key <PGDN> { [ Next             ] };
    key <UP>   { [ up               ] };
    key <LEFT> { [ left             ] };
    key <DOWN> { [ down             ] };
    key <RGHT> { [ right            ] };

    key <AE01> { [ 1         ] };
    key <AE02> { [ 2         ] };
    key <AE03> { [ 3         ] };
    key <AE04> { [ 4         ] };
    key <AE05> { [ 5         ] };
    key <AE06> { [ 6         ] };
    key <AE07> { [ 7         ] };
    key <AE08> { [ 8         ] };
    key <AE09> { [ 9         ] };
    key <AE10> { [ 0         ] };
    key <AE11> { [ ssharp    ] };
    key <AE12> { [ backslash ] };

    key.type="CTRL+ALT";

    key <FK01> { [ F1,  XF86Switch_VT_1  ] };
    key <FK02> { [ F2,  XF86Switch_VT_2  ] };
    key <FK03> { [ F3,  XF86Switch_VT_3  ] };
    key <FK04> { [ F4,  XF86Switch_VT_4  ] };
    key <FK05> { [ F5,  XF86Switch_VT_5  ] };
    key <FK06> { [ F6,  XF86Switch_VT_6  ] };
    key <FK07> { [ F7,  XF86Switch_VT_7  ] };
    key <FK08> { [ F8,  XF86Switch_VT_8  ] };
    key <FK09> { [ F9,  XF86Switch_VT_9  ] };
    key <FK10> { [ F10, XF86Switch_VT_10 ] };
    key <FK11> { [ F11, XF86Switch_VT_11 ] };
    key <FK12> { [ F12, XF86Switch_VT_12 ] };

    key.type = "THREE_LEVEL";

    key <AD01> { [ q,          Q,          backslash    ] };
    key <AD02> { [ w,          W,          backslash    ] };
    key <AD03> { [ e,          E,          bracketleft  ] };
    key <AD04> { [ r,          R,          bracketright ] };
    key <AD05> { [ t,          T,          asciicircum  ] };
    key <AD06> { [ z,          Z,          exclam       ] };
    key <AD07> { [ u,          U,          less         ] };
    key <AD08> { [ i,          I,          greater      ] };
    key <AD09> { [ o,          O,          equal        ] };
    key <AD10> { [ p,          P,          ampersand    ] };
    key <AD11> { [ udiaeresis, Udiaeresis, at           ] };
    key <AD12> { [ backslash,  backslash,  backslash    ] };

    key <AC01> { [ a,          A,          backslash  ] };
    key <AC02> { [ s,          S,          slash      ] };
    key <AC03> { [ d,          D,          braceleft  ] };
    key <AC04> { [ f,          F,          braceright ] };
    key <AC05> { [ g,          G,          asterisk   ] };
    key <AC06> { [ h,          H,          question   ] };
    key <AC07> { [ j,          J,          parenleft  ] };
    key <AC08> { [ k,          K,          parenright ] };
    key <AC09> { [ l,          L,          minus      ] };
    key <AC10> { [ odiaeresis, Odiaeresis, colon      ] };
    key <AC11> { [ adiaeresis, Adiaeresis, backslash  ] };

    key <AB01> { [ y,      Y,          numbersign ] };
    key <AB02> { [ x,      X,          dollar     ] };
    key <AB03> { [ c,      C,          bar        ] };
    key <AB04> { [ v,      V,          asciitilde ] };
    key <AB05> { [ b,      B,          grave      ] };
    key <AB06> { [ n,      N,          plus       ] };
    key <AB07> { [ m,      M,          percent    ] };
    key <AB08> { [ comma,  semicolon,  quotedbl   ] };
    key <AB09> { [ period, colon,      apostrophe ] };
    key <AB10> { [ minus,  underscore, semicolon  ] };

    modifier_map Shift   { Shift_L,   Shift_R   };
    modifier_map Control { Control_L, Control_R };

    include "level3(ralt_switch)"
    include "level3(lsgt_switch)"
};
